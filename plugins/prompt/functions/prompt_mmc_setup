#!/bin/zsh

function +vi-git_status {
  # Check for untracked files or updated submodules since vcs_info does not.
  if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
    hook_com[unstaged]='%F{red}•%f'
  fi

  ### git: Show ⇡N/⇣N when your local branch is ahead-of or behind remote HEAD.
  # Make sure you have added misc to your 'formats':  %m
  local ahead behind
  local -a gitstatus

  # Exit early in case the worktree is on a detached HEAD
  git rev-parse ${hook_com[branch]}@{upstream} >/dev/null 2>&1 || return 0

  local -a ahead_and_behind=(
    $(git rev-list --left-right --count HEAD...${hook_com[branch]}@{upstream} 2>/dev/null)
  )

  ahead=${ahead_and_behind[1]}
  behind=${ahead_and_behind[2]}

  (( $ahead )) && gitstatus+=( "⇡${ahead}" )
  (( $behind )) && gitstatus+=( "⇣${behind}" )

  hook_com[misc]+=${(j:/:)gitstatus}
}

function prompt_mmc_precmd {
  setopt local_options
  unsetopt xtrace ksh_arrays
  _prompt_mmc_pwd=$(prompt_pwd)
  vcs_info
}

function prompt_mmc_preview {
  local +h PROMPT=''
  local +h RPROMPT=''
  local +h SPROMPT=''

  editor-info 2> /dev/null
  prompt_preview_theme 'mmc'
}

function prompt_mmc_setup {
  setopt local_options
  unsetopt xtrace ksh_arrays
  prompt_opts=(cr percent sp subst)

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  # Add hook for calling vcs_info before each command.
  add-zsh-hook precmd prompt_mmc_precmd

  # Define default prompt colors.
  typeset -gA _prompt_mmc_colors=(
    black   "000"
    red     "001"
    green   "002"
    yellow  "003"
    blue    "004"
    magenta "005"
    cyan    "006"
    white   "007"
  )

  # Use extended color pallete if available.
  if [[ $TERM = *256color* || $TERM = *rxvt* ]]; then
    zstyle -s ':zsh_custom:plugin:prompt:mmc:colors' black   '_prompt_mmc_colors[black]'   || _prompt_mmc_colors[black]="000"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:colors' red     '_prompt_mmc_colors[red]'     || _prompt_mmc_colors[red]="160"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:colors' green   '_prompt_mmc_colors[green]'   || _prompt_mmc_colors[green]="076"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:colors' yellow  '_prompt_mmc_colors[yellow]'  || _prompt_mmc_colors[yellow]="178"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:colors' blue    '_prompt_mmc_colors[blue]'    || _prompt_mmc_colors[blue]="039"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:colors' magenta '_prompt_mmc_colors[magenta]' || _prompt_mmc_colors[magenta]="168"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:colors' cyan    '_prompt_mmc_colors[cyan]'    || _prompt_mmc_colors[cyan]="037"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:colors' white   '_prompt_mmc_colors[white]'   || _prompt_mmc_colors[white]="255"
  fi

  # Define default prompt symbols.
  typeset -gA _prompt_mmc_chars=(
    success "%%"
    error   "%%"
    vicmd   "V"
    stash   "="
    dirty   "*"
    ahead   "+"
    behind  "-"
  )

  # Use unicode chars if available.
  if ! zstyle -t ':zsh_custom:plugin:prompt:mmc:unicode' disable; then
    zstyle -s ':zsh_custom:plugin:prompt:mmc:character' success '_prompt_mmc_chars[success]' || _prompt_mmc_chars[success]="❱"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:character' error   '_prompt_mmc_chars[error]'   || _prompt_mmc_chars[error]="❱"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:character' vicmd   '_prompt_mmc_chars[vicmd]'   || _prompt_mmc_chars[vicmd]="❰"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:character' stash   '_prompt_mmc_chars[stash]'   || _prompt_mmc_chars[stash]="☰"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:character' dirty   '_prompt_mmc_chars[dirty]'   || _prompt_mmc_chars[dirty]="•"  # "✱"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:character' ahead   '_prompt_mmc_chars[ahead]'   || _prompt_mmc_chars[ahead]="⇡"
    zstyle -s ':zsh_custom:plugin:prompt:mmc:character' behind  '_prompt_mmc_chars[behind]'  || _prompt_mmc_chars[behind]="⇣"
  fi

  # Set vcs_info parameters.
  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:*' check-for-changes true
  zstyle ':vcs_info:*' stagedstr "%F{${_prompt_mmc_colors[green]}}${_prompt_mmc_chars[dirty]}%f"
  zstyle ':vcs_info:*' unstagedstr "%F{${_prompt_mmc_colors[yellow]}}${_prompt_mmc_chars[dirty]}%f"
  zstyle ':vcs_info:*' formats '%b%c%u%m'
  zstyle ':vcs_info:*' actionformats "%b%c%u%m|%F{cyan}%a%f"
  zstyle ':vcs_info:git*+set-message:*' hooks git_status

  # Define prompts.
  PROMPT='%F{${_prompt_mmc_colors[blue]}}$_prompt_mmc_pwd%f %F{${_prompt_mmc_colors[green]}}$_prompt_mmc_chars[success]%f '
  RPROMPT='${vcs_info_msg_0_}'
}
prompt_mmc_setup "$@"
